# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '01.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from PyQt5.QtCore import QRect, QMetaObject, QCoreApplication
from PyQt5.QtWidgets import QWidget, QPushButton, QLabel, QTextEdit, QMenuBar, QApplication, QStatusBar, QMainWindow, \
    QDialog, QVBoxLayout
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas

from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar

import matplotlib.pyplot as plt


class Point:
    def __init__(self, sh, distance):
        self.sh_point = sh
        self.distance_point = distance

    def change(self, sh, distance):
        self.sh_point = sh
        self.distance_point = distance


lst = [Point(248, 21), Point(120, 49), Point(504, 48)]


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1000, 500)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.button_edit = QPushButton(self.centralwidget)
        self.button_edit.setObjectName(u"button_edit")
        self.button_edit.setGeometry(QRect(410, 180, 151, 31))
        self.label = QLabel(self.centralwidget)
        self.label.setObjectName(u"label")
        self.label.setGeometry(QRect(10, 10, 351, 361))
        self.sh = QTextEdit(self.centralwidget)
        self.sh.setObjectName(u"sh")
        self.sh.setGeometry(QRect(410, 140, 71, 31))
        self.distance = QTextEdit(self.centralwidget)
        self.distance.setObjectName(u"distance")
        self.distance.setGeometry(QRect(490, 140, 71, 31))
        self.button_save = QPushButton(self.centralwidget)
        self.button_save.setObjectName(u"button_save")
        self.button_save.setGeometry(QRect(410, 220, 151, 31))
        self.label2 = QLabel(self.centralwidget)
        self.label2.setObjectName(u"label")
        self.label2.setGeometry(QRect(410, 110, 200, 21))
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 568, 22))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.button_first_day = QPushButton(self.centralwidget)
        self.button_first_day.setObjectName(u"button_save")
        self.button_first_day.setGeometry(QRect(630, 50, 200, 50))

        self.button_finish_day = QPushButton(self.centralwidget)
        self.button_finish_day.setObjectName(u"button_save")
        self.button_finish_day.setGeometry(QRect(630, 120, 200, 50))

        self.button_next_day = QPushButton(self.centralwidget)
        self.button_next_day.setObjectName(u"button_save")
        self.button_next_day.setGeometry(QRect(630, 190, 200, 50))

        self.button_prev_day = QPushButton(self.centralwidget)
        self.button_prev_day.setObjectName(u"button_save")
        self.button_prev_day.setGeometry(QRect(630, 260, 200, 50))

        self.id = QTextEdit(self.centralwidget)
        self.id.setObjectName(u"sh")
        self.id.setGeometry(QRect(350, 140, 51, 31))
        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)

    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.button_edit.setText(QCoreApplication.translate("MainWindow",
                                                            u"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c",
                                                            None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"picture", None))
        self.button_save.setText(
            QCoreApplication.translate("MainWindow", u"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c", None))
        self.button_first_day.setText(QCoreApplication.translate("MainWindow", "К первому дню"))
        self.button_finish_day.setText(QCoreApplication.translate("MainWindow", "К последнему дню"))
        self.button_next_day.setText(QCoreApplication.translate("MainWindow", "К следующему дню"))
        self.button_prev_day.setText(QCoreApplication.translate("MainWindow", "К предыдущему дню"))

    # retranslateUi


class Window(QWidget):
    def __init__(self, parent=None):
        super(Window, self).__init__(parent)
        self.figure = plt.figure()
        self.canvas = FigureCanvas(self.figure)
        self.canvas.move(150, 50)
        self.toolbar = NavigationToolbar(self.canvas, self)
        self.button = QPushButton('Draw')
        self.button.clicked.connect(self.plot)
        layout = QVBoxLayout()
        layout.addWidget(self.toolbar)
        layout.addWidget(self.canvas)
        layout.addWidget(self.button)
        self.setLayout(layout)

    # action called by the push button

    def plot(self):
        # print(self.distance_point)
        data = [3, 8, 45]
        data2 = [0] * len(data)
        print(data2)
        self.figure.clear()
        ax = self.figure.add_subplot(111)
        ax.plot(data, data2)
        ax.plot(data, data2, marker='o', color="red")
        self.canvas.draw()


class MyWidget(QMainWindow, Ui_MainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.button_edit.clicked.connect(self.run_edit)
        self.button_save.clicked.connect(self.run_save)

    def gg(self):
        self.a = Window()
        self.a.show()

    def run_save(self):
        pass

    def run_edit(self):
        global lst
        sh_text = self.sh.toPlainText()
        print(sh_text)
        distance_text = self.distance.toPlainText()
        try:
            for i in sh_text:
                i = int(i)
            for i in distance_text:
                i = int(i)
            lst.append(Point(sh_text, distance_text))
        except:
            self.label2.setText("Некорректные данные!")


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = MyWidget()
    ex.show()
    ex.gg()
    sys.exit(app.exec_())